#include<stdio.h>
#include<stdlib.h>
#include <string.h>

typedef struct _NODE
{
    char color[10];
    struct _NODE *next;
} Node;

void insert(Node**, char*, int);

void erase1(Node**, int);

void erase2(Node**, char*);

void show(Node **head);

void reverse(Node**, int, int);

void insert(Node** head, char* buf,int num){
    Node* now = *head;
    Node* np = (Node*) malloc(sizeof(Node));
    strcpy(np->color,buf);
    while(num--){
        if(now->next == NULL)
            break;
        now = now->next;
    }
    np->next = now->next;
    now->next = np;
}

void erase1(Node** head, int num){
    Node* now = *head;
    Node* pre = NULL;
    while(num--){
        if(now->next == NULL)
            break;
        pre = now;
        now = now->next;
    }
    if(pre != NULL){
        pre->next = now->next;
        free(now);
    }

}

void erase2(Node** head,char* buf){
    Node *now = (*head)->next;
    Node *pre = *head;
    while(now != NULL){
        if(!strcmp(now->color,buf)){
            pre->next = now->next;
            free(now);
            now = pre->next;
        }
        else {
            pre = now;
            now = now->next;
        }
    }
}

void reverse(Node** head, int a, int b){
    Node *now = *head;
    Node *connect;
    Node *next;
    int copya = a;
    while(copya--){
        connect = now;
        now = now->next;
    }
    int cnt = b-a;
    while(cnt-- && (now->next)!=NULL){
        next = now->next;
        now->next = next->next;
        next->next = connect->next;
        connect->next = next;
    }
}